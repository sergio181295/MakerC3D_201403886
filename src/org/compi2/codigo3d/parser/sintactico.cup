package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("T.T");
        System.err.println(s);
    }

:}

action code
{://Codigo de acciones
      
:}

terminal String ID, ENTERO, DECIMAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER, MAYOR, MENOR, MAYORIGUAL, MENORIGUAL, IGUAL, NOIGUAL, AND, OR, NOT;
nonterminal NodoC3D inicial, expresion;


precedence left OR;
precedence left AND;
precedence right NOT;
precedence left MAYOR, MENOR, MAYORIGUAL, MENORIGUAL, IGUAL, NOIGUAL;
precedence left MAS, MENOS;
precedence left MULT, DIV; 
precedence right POT;
precedence left PAR_DER, PAR_IZQ; 

start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} expresion:exp 
                    {: 
                        RESULT = exp;
                        ControlC3D.agregarC3D(exp.codigo);
                        if(exp.lv != ""){
                            ControlC3D.agregarC3D(exp.lv + ":\n");
                        }
                        if(exp.lf != ""){
                            ControlC3D.agregarC3D(exp.lf + ":");
                        }
                        
                    :};

expresion   ::= expresion:izq MAS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " + " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MENOS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " - " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MULT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " * " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq DIV expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " / " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq POT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " ^ " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   MENOS expresion:exp 
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = - " + exp.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MAYOR expresion:der
                    {: 
                        String lv = ControlC3D.generaEtq();
                        String lf = ControlC3D.generaEtq();
                        String c3d = "if "+ izq.getCad() + " > " + der.getCad() + " goto "+lv + "\ngoto "+lf+"\n";
                        RESULT = new NodoC3D(); 
                        RESULT.lv = lv;
                        RESULT.lf = lf;
                        RESULT.codigo = c3d;
                    :}
            |   expresion:izq MENOR expresion:der
                    {: 
                        String lv = ControlC3D.generaEtq();
                        String lf = ControlC3D.generaEtq();
                        String c3d = "if "+ izq.getCad() + " < " + der.getCad() + " goto "+lv + "\ngoto "+lf+"\n";
                        RESULT = new NodoC3D(); 
                        RESULT.lv = lv;
                        RESULT.lf = lf;
                        RESULT.codigo = c3d;
                    :}
            |   expresion:izq MAYORIGUAL expresion:der
                    {: 
                        String lv = ControlC3D.generaEtq();
                        String lf = ControlC3D.generaEtq();
                        String c3d = "if "+ izq.getCad() + " >= " + der.getCad() + " goto "+lv + "\ngoto "+lf+"\n";
                        RESULT = new NodoC3D(); 
                        RESULT.lv = lv;
                        RESULT.lf = lf;
                        RESULT.codigo = c3d;
                    :}
            |   expresion:izq MENORIGUAL expresion:der
                    {: 
                        String lv = ControlC3D.generaEtq();
                        String lf = ControlC3D.generaEtq();
                        String c3d = "if "+ izq.getCad() + " <= " + der.getCad() + " goto "+lv + "\ngoto "+lf+"\n";
                        RESULT = new NodoC3D(); 
                        RESULT.lv = lv;
                        RESULT.lf = lf;
                        RESULT.codigo = c3d;
                    :}
            |   expresion:izq IGUAL expresion:der
                    {: 
                        String lv = ControlC3D.generaEtq();
                        String lf = ControlC3D.generaEtq();
                        String c3d = "if "+ izq.getCad() + " == " + der.getCad() + " goto "+lv + "\ngoto "+lf+"\n";
                        RESULT = new NodoC3D(); 
                        RESULT.lv = lv;
                        RESULT.lf = lf;
                        RESULT.codigo = c3d;
                    :}
            |   expresion:izq NOIGUAL expresion:der
                    {: 
                        String lv = ControlC3D.generaEtq();
                        String lf = ControlC3D.generaEtq();
                        String c3d = "if "+ izq.getCad() + " != " + der.getCad() + " goto "+lv + "\ngoto "+lf +"\n";
                        RESULT = new NodoC3D(); 
                        RESULT.lv = lv;
                        RESULT.lf = lf;
                        RESULT.codigo = c3d;
                    :}
            |   expresion:izq AND expresion:der
                    {: 
                        String c3d = izq.codigo + izq.lv +": "+der.codigo;
                        RESULT = new NodoC3D(); 
                        RESULT.lv = der.lv;
                        RESULT.lf = izq.lf + "," + der.lf;
                        RESULT.codigo = c3d;
                    :}
            |   expresion:izq OR expresion:der
                    {: 
                        String c3d = izq.codigo + izq.lf +": "+der.codigo;
                        RESULT = new NodoC3D(); 
                        RESULT.lf = der.lf;
                        RESULT.lv = izq.lv + "," + der.lv;
                        RESULT.codigo = c3d;
                    :}
            |   NOT expresion:exp
                    {: 
                        RESULT = new NodoC3D(); 
                        RESULT.lf = exp.lv;
                        RESULT.lv = exp.lf;
                        RESULT.codigo = exp.codigo;
                    :}
            |   PAR_IZQ expresion:exp PAR_DER   
                    {: RESULT = exp; :}
            |   ID:id           
                    {: RESULT = new NodoC3D(id); :}
            |   ENTERO:entero   
                    {: RESULT = new NodoC3D(entero); :}
            |   DECIMAL:decimal 
                    {: RESULT = new NodoC3D(decimal); :}
            ;